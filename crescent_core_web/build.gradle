plugins {
  id "org.springframework.boot" version "2.7.18"
  id "io.spring.dependency-management" version "1.0.11.RELEASE"
  id "java"
  id "net.ltgt.errorprone" version "2.0.1"
}

group = "org.crescent"
version = "0.0.1"

def versions = [
    lucene : "8.9.0",
    slf4j  : "1.7.25",
    logback: "1.2.3"
]

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

dependencies {
  errorprone("com.google.errorprone:error_prone_core:2.14.0")
  errorproneJavac("com.google.errorprone:javac:9+181-r4173-1")

  annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")

  implementation("org.springframework.boot:spring-boot-starter-web")
  implementation("org.springframework.boot:spring-boot-starter-thymeleaf")
  developmentOnly("org.springframework.boot:spring-boot-devtools")

  implementation("org.apache.lucene:lucene-core:${versions.lucene}")
  implementation("org.apache.lucene:lucene-analyzers-common:${versions.lucene}")
  implementation("org.apache.lucene:lucene-analyzers-nori:${versions.lucene}")
  implementation("org.apache.lucene:lucene-queries:${versions.lucene}")
  implementation("org.apache.lucene:lucene-queryparser:${versions.lucene}")
  implementation("org.apache.lucene:lucene-highlighter:${versions.lucene}")
  implementation("org.apache.lucene:lucene-test-framework:${versions.lucene}")
  implementation("org.apache.lucene:lucene-misc:${versions.lucene}")
  implementation("org.slf4j:slf4j-api:${versions.slf4j}")
  implementation("jaxen:jaxen:1.1.4")
  implementation("dom4j:dom4j:1.6.1")

  implementation("com.google.guava:guava:30.1.1-jre")

  implementation("ch.qos.logback:logback-core:${versions.logback}")
  implementation("ch.qos.logback:logback-classic:${versions.logback}")
  implementation("com.thoughtworks.xstream:xstream:1.4.19")
  implementation("net.htmlparser.jericho:jericho-html:3.0")

  implementation("javax.annotation:javax.annotation-api:1.3.2")

  testImplementation("org.springframework.boot:spring-boot-starter-test")
}

test {
  useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
  options.errorprone.disableWarningsInGeneratedCode = true
}
